size 300 300
maxdepth 5
output stela2.png
camera 0 1 12 0 1 0 0 1 0 45
#directional 0 -1 0 .7 .7 .7
#directional 0 1 0 .7 .7 .7
point 0 1.5 5 .9 .9 .9
#point 0 20 0 .5 .5 .5

#point 0 -20 0 .7 .7 .7

# START DODECAHEDRON

refraction 1
refractionIndex 1.3
d#iffuse .5 .5 .5

#specular .7 .7 .7

#shininess 20

vertex -1 -1 -1
vertex +1 -1 -1 
vertex +1 +1 -1 
vertex -1 +1 -1 
vertex -1 -1 +1
vertex +1 -1 +1 
vertex +1 +1 +1
vertex -1 +1 +1
pushTransform
rotate 0 1 0 45
rotate 1 0 0 30
pushTransform
# The basic camera transform to return to for new parts

# The actual cube definition.  Since no instancing is supported, I will just 
# repeat this to create many cubes.  For extra credit, you can implement 
# instancing to make this simpler.  Alternatively, define a ray-cube 
# intersection test.

tri 0 1 5 
tri 0 5 4 
tri 3 7 6
tri 3 6 2
tri 1 2 6
tri 1 6 5 
tri 0 7 3 
tri 0 4 7 
tri 0 3 2 
tri 0 2 1
tri 4 5 6 
tri 4 6 7 
popTransform
popTransform

#START BACK
specular 0 0 0
diffuse .4 .4 .8
ambient .1 .1 .1
vertex -1 0 -1
vertex +1 0 -1
vertex +1 0 +1
vertex -1 0 +1

pushTransform
translate 0 0 -20
rotate 0 1 0 -45
rotate 1 0 0 90
scale 100 1 100
tri 8 9 10
tri 8 10 11
popTransform

pushTransform
diffuse .4 .8 .4
translate 0 0 -20
rotate 0 1 0 45
rotate 1 0 0 90
scale 100 1 100
tri 8 9 10
tri 8 10 11
popTransform